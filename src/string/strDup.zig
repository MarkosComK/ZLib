//==============================================================================
// |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|
// |                                                                           |
// | ███████╗██╗██████╗  ────────── ZIB LIBRARY ────────                       |
// | ╚══███╔╝██║██╔══██╗                                                       |
// |   ███╔╝ ██║██████╔╝  Created: 2025-01-19 18:25:10                         |
// |  ███╔╝  ██║██╔══██╗  Last Updated: 2025-01-19 18:25:19                    |
// | ███████╗██║██████╔╝                                                       |
// | ╚══════╝╚═╝╚═════╝                                                        |
// |___________________________________________________________________________|
//==============================================================================

const Allocator = @import("std").mem.Allocator;
const strLen = @import("../string/strLen.zig").strLen;
const strCpy = @import("../string/strCpy.zig").strCpy;

pub fn strDup(allocator: Allocator, str: []const u8) ![]u8 {
    var dup: []u8 = try allocator.alloc(u8, strLen(str));
    dup = strCpy(dup, str);
    return dup;
}
